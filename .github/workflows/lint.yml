name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v4
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'  # This uses the latest Node.js version

    - name: Cache Node.js modules
      uses: actions/cache@v4
      id: npm-cache
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install Node.js dependencies
      run: npm install

    - name: Run PHP lint
      run: |
        composer require --dev squizlabs/php_codesniffer
        vendor/bin/phpcs --config-set installed_paths vendor/wp-coding-standards/wpcs
        vendor/bin/phpcs --standard=WordPress .

    - name: Run JS lint
      run: |
        npm install eslint eslint-plugin-wordpress --save-dev
        npx eslint . --ext .js --ext .jsx --config .eslintrc.json

    - name: Run CSS lint
      run: |
        npm install stylelint stylelint-config-wordpress --save-dev
        npx stylelint "**/*.css"

    # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
    # Docs: https://getcomposer.org/doc/articles/scripts.md

    # - name: Run test suite
    #   run: composer run-script test
